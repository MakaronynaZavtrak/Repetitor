//4. Найти цикл в графе, используя DFS.

#include <iostream>
#include <vector>
using namespace std;

void DFS(vector<vector<int>>& graph,  int vert, vector<int>& repeatVerts, bool& answer) 
{
	if (find(repeatVerts.begin(), repeatVerts.end(), vert) == repeatVerts.end())
		repeatVerts.push_back(vert);
	else
	{
		answer = true;
		return;
	}

	for (int neighbour : graph[vert])
		DFS(graph, neighbour, repeatVerts, answer);
}

bool doesContainsCycle(vector<vector<int>>& graph) 
{
	vector<int> repeatVerts;
	bool answer = false;
	DFS(graph, 0, repeatVerts, answer);
	return answer;
}

int main() 
{
	freopen("input.txt", "r", stdin);

	int n, m;
	//n - кол-во вершин, m - кол-во рёбер в графе
	cin >> n >> m;

	vector<vector<int>> graph(n);
	//граф является невзвешенным

	for (int i = 0; i < m; i++)
	{
		int from, to;
		cin >> from >> to;
		graph[from].push_back(to);
		graph[to].push_back(from);
	}

	vector<bool> visited(n);
	
	cout << doesContainsCycle(graph);

	return 0;
}
